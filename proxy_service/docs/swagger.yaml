basePath: /
definitions:
  handlers.LoginRequest:
    description: LoginRequest defines the expected request body for logging in.
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handlers.RegisterRequest:
    description: RegisterRequest defines the expected request body for creating a
      new user.
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  handlers.RoleUpdateRequest:
    description: RoleUpdateRequest defines the expected request body for role updates.
    properties:
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: Majid Darvishan
    url: https://github.com/shpd
  description: A Auth-service gateway.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://example.com/terms
  title: Auth service API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user credentials and return a signed JWT
      parameters:
      - description: Login payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid JSON format
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'Unauthorized: invalid credentials'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error during token generation
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user account with username, password, and role
      parameters:
      - description: Registration payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input or missing fields
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error during registration
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Auth
  /users/{username}:
    delete:
      description: Delete an existing user account (admin only)
      parameters:
      - description: Username to delete
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Username is required
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Could not delete user
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
      tags:
      - Auth
  /users/{username}/role:
    put:
      consumes:
      - application/json
      description: Update the role of an existing user (admin only)
      parameters:
      - description: Username to update
        in: path
        name: username
        required: true
        type: string
      - description: Role update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RoleUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User role updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input or missing fields
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update user role
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user role
      tags:
      - Auth
swagger: "2.0"
