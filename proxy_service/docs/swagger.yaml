basePath: /
definitions:
  handlers.AdminDashboardResponse:
    properties:
      message:
        type: string
      rules:
        items:
          $ref: '#/definitions/handlers.SwaggerAccountingRule'
        type: array
      users:
        items:
          $ref: '#/definitions/handlers.SwaggerUserRolePair'
        type: array
    type: object
  handlers.ErrorResponse:
    properties:
      details:
        type: string
      error:
        type: string
    type: object
  handlers.LoginRequest:
    description: LoginRequest defines the expected request body for logging in.
    properties:
      captchaId:
        type: string
      captchaSolution:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  handlers.RegisterRequest:
    description: RegisterRequest defines the expected request body for creating a
      new user.
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  handlers.RoleUpdateRequest:
    description: RoleUpdateRequest defines the expected request body for role updates.
    properties:
      role:
        type: string
    type: object
  handlers.RolesListResponse:
    properties:
      roles:
        items:
          $ref: '#/definitions/handlers.SwaggerRole'
        type: array
    type: object
  handlers.SuccessResponse:
    properties:
      message:
        type: string
      role:
        $ref: '#/definitions/handlers.SwaggerRole'
    type: object
  handlers.SwaggerAccountingRule:
    properties:
      charge:
        type: number
      created_at:
        type: string
      endpoint:
        type: string
      id:
        type: integer
      updated_at:
        type: string
    type: object
  handlers.SwaggerCustomEndpoint:
    description: SwaggerCustomEndpoint defines the expected request body for custom
      endpoint.
    properties:
      endpoints:
        items:
          type: string
        type: array
      method:
        type: string
      needAccounting:
        type: boolean
      path:
        type: string
    type: object
  handlers.SwaggerRole:
    properties:
      description:
        description: The description of the role
        type: string
      id:
        description: The unique ID of the role
        type: integer
      name:
        description: The name of the role
        type: string
    type: object
  handlers.SwaggerRoleRequest:
    properties:
      description:
        description: A short description of the role
        type: string
      name:
        description: |-
          The name of the role
          required: true
        type: string
    type: object
  handlers.SwaggerUserRolePair:
    properties:
      role:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: Majid Darvishan
    url: https://github.com/shpd
  description: A Auth-service gateway.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://example.com/terms
  title: Auth service API
  version: "1.0"
paths:
  /admin/customendpoints:
    post:
      consumes:
      - application/json
      description: Create Custom Endpoint to redirect its requests to another endpoints
      parameters:
      - description: CustomEndpoint payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.SwaggerCustomEndpoint'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid JSON format
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'Unauthorized: invalid credentials'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error during token generation
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create Custom Endpoint
      tags:
      - Admin
  /admin/dashboard:
    get:
      description: Retrieves a list of all users (username + role) and all accounting
        rules. Admins only.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AdminDashboardResponse'
        "401":
          description: Token claims missing or invalid
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Not an admin
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Database error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get admin dashboard data
      tags:
      - Admin
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user credentials and return a signed JWT
      parameters:
      - description: Login payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid JSON format
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 'Unauthorized: invalid credentials'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error during token generation
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - Auth
  /roles:
    get:
      description: Returns a list of all roles defined in the system.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RolesListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: List all roles
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Allows an admin to create a new role by specifying name and description.
      parameters:
      - description: Role details
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/handlers.SwaggerRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new role
      tags:
      - roles
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user account with username, password, and role
      parameters:
      - description: Registration payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input or missing fields
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error during registration
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Auth
  /users/{username}:
    delete:
      description: Delete an existing user account (admin only)
      parameters:
      - description: Username to delete
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Username is required
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Could not delete user
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
      tags:
      - Auth
  /users/{username}/role:
    put:
      consumes:
      - application/json
      description: Update the role of an existing user (admin only)
      parameters:
      - description: Username to update
        in: path
        name: username
        required: true
        type: string
      - description: Role update payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RoleUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User role updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input or missing fields
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update user role
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user role
      tags:
      - Auth
swagger: "2.0"
